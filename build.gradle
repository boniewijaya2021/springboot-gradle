plugins {
	id 'org.sonarqube' version '3.3'
	id 'org.springframework.boot' version '3.3.+'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'jacoco'
	id 'maven-publish'
	id 'war'
	id 'java'
}

group = 'com.ura'
sourceCompatibility = '17'

sonarqube {
	properties {
		property "sonar.projectName", "$project.sonarProject"
		property "sonar.projectKey", "$project.sonarProject"
		property "sonar.sourceEncoding", "UTF-8"
		property 'sonar.coverage.jacoco.xmlReportPaths', "build/reports/jacoco/test/jacocoTestReport.xml"
	}
}

repositories {
	gradlePluginPortal()
	mavenCentral()
}

dependencies {
	implementation "org.projectlombok:lombok:$project.lombokVersion"
	implementation 'junit:junit:4.13.1'
	annotationProcessor "org.projectlombok:lombok:$project.lombokVersion"

	// Azure Key Vault
	implementation 'com.azure:azure-identity:1.13.+'
	implementation 'com.azure:azure-sdk-bom:1.2.+'
	implementation 'com.azure:azure-security-keyvault-secrets:4.8.+'

	implementation "org.springframework.boot:spring-boot-starter"
	implementation "org.springframework.boot:spring-boot-starter-log4j2"
	implementation "org.springframework.boot:spring-boot-starter-web"
	implementation "org.springframework.boot:spring-boot-starter-data-jpa"
	implementation "org.springframework.boot:spring-boot-starter-security"
	implementation "org.springframework.boot:spring-boot-starter-oauth2-resource-server"
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	implementation 'org.apache.httpcomponents.client5:httpclient5:5.3.1'

	implementation 'com.fasterxml.jackson.core:jackson-core:2.17.1'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.1'
	implementation 'com.fasterxml.jackson.core:jackson-annotations:2.17.1'
	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.17.1'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.17.1'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-joda:2.17.1'
	implementation "com.microsoft.sqlserver:mssql-jdbc:12.6.3.jre11"

	implementation 'jakarta.validation:jakarta.validation-api:3.1.0'
	implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.2'
	implementation group: 'com.azure', name: 'azure-storage-blob', version: '12.26.1'
	testImplementation 'com.h2database:h2:2.2.224'

	implementation 'org.hibernate:hibernate-core:6.5.2.Final' // or the latest compatible version
	implementation 'com.oracle.database.jdbc:ojdbc8:19.8.0.0'
	implementation 'org.hibernate.validator:hibernate-validator:8.0.1.Final'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'


	// mockmvc and junit 5
	testImplementation "org.mockito:mockito-core:4.5.1"
	testImplementation platform('org.junit:junit-bom:5.9.1')
	testImplementation 'org.junit.jupiter:junit-jupiter'
	testImplementation 'org.mockito:mockito-inline:4.5.1'
	testImplementation 'com.h2database:h2:2.2.224'

	testAnnotationProcessor "org.projectlombok:lombok:$project.lombokVersion"
	implementation 'org.springframework.security:spring-security-test'
	implementation 'com.google.guava:guava:33.2.1-jre'

	implementation group: 'net.javacrumbs.shedlock', name: 'shedlock-spring', version: '5.1.0'
	implementation group: 'net.javacrumbs.shedlock', name: 'shedlock-provider-jdbc-template', version: '5.1.0'
	implementation 'org.apache.poi:poi:5.2.5'
	implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '5.3.0'
	implementation group: 'org.apache.commons', name: 'commons-compress', version: '1.26.2'
	implementation group: 'commons-io', name: 'commons-io', version: '2.16.1'
	// https://mvnrepository.com/artifact/org.mapstruct/mapstruct
	implementation group: 'org.mapstruct', name: 'mapstruct', version: '1.5.5.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
	implementation group: 'com.azure', name: 'azure-security-keyvault-certificates', version: '4.6.4'

	implementation group: 'com.auth0', name: 'java-jwt', version: '4.4.+'
	implementation group: 'com.auth0', name: 'jwks-rsa', version: '0.22.+'

	implementation group: 'com.microsoft.graph', name: 'microsoft-graph', version: '5.41.0'
	implementation 'com.nimbusds:oauth2-oidc-sdk:10.5.1'

	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.12.6'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.12.6'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.12.6'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
}

tasks.named('test') {
	useJUnitPlatform()
}

configurations {
	all {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	}
	providedRuntime
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

tasks.named('war') {
    enabled = true
    archiveFileName = "${project.name}-${project.version}.war"
}

tasks.named("bootWar") {
    archiveClassifier = 'boot'
    archiveFileName = "${project.name}-${project.version}-boot.war"
    mainClass = 'com.mgg.prototipe.PrototipeApplication'
}

springBoot {
	buildInfo {
		properties {
			version = project.version
		}
	}
}

publishing {
	publications {
		bootJava(MavenPublication) {
			artifact tasks.named("bootWar")
		}
	}
}

test {
	systemProperty 'spring.profiles.active', "$project.testProfile"
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	dependsOn test
}

tasks.named('sonarqube').configure {
	dependsOn test
}

jacocoTestReport {
	reports {
		html.required = true
		xml.required = true
	}
}